 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package foodxyz;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Adam
 */
public class gudangKelolaBarang extends javax.swing.JFrame {
    Statement stat;
    ResultSet rs;
    String sql;
    Connection kon;
    private DefaultTableModel daftartabel;
    
    public gudangKelolaBarang() {
        initComponents();
        this.barangList();
        FoodXYZ DB = new FoodXYZ();
        DB.konfig();
        kon = DB.con;
        stat = DB.stm;
    }
    private String tanggal() {
    // Di sini mengatur format tanggal sesuai keinginan
    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
    java.util.Date tanggal = new java.util.Date();
    return sdf.format(tanggal);
}
//    memeriksa apakah semua field terisi
    private boolean isFormValid() {
    if (kd_barang.getText().isEmpty() || 
        nm_barang.getText().isEmpty() || 
        tanggal.getDate() == null || 
        jml_barang.getText().isEmpty() || 
        satuanText.getText().isEmpty() || 
        harga.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
     // Memeriksa apakah satuanText mengandung setidaknya satu karakter (huruf)
        String satuanInput = satuanText.getText();
        Pattern pattern = Pattern.compile("^[0-9]+$"); // Ekspresi reguler untuk angka
        Matcher matcher = pattern.matcher(satuanInput);
        boolean containsChar = false;

        for (char c : satuanInput.toCharArray()) {
            if (Character.isLetter(c)) {
                containsChar = true;
                break;
            }
        }

        if (!containsChar) {
            JOptionPane.showMessageDialog(null, "Input satuan tidak valid. Harus mengandung satuan (huruf).", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    return true;
}
//    menampilkan data yang ada di tabel barang
    public void barangList() {
        daftartabel = new DefaultTableModel();
        daftartabel.addColumn("kode barang");
        daftartabel.addColumn("nama barang");
        daftartabel.addColumn("tanggal expired");
        daftartabel.addColumn("jumlah barang");
        daftartabel.addColumn("satuan");
        daftartabel.addColumn("harga satuan");
        list.setModel(daftartabel);
        FoodXYZ user = new FoodXYZ();
        user.konfig();
        kon = user.getConnection();
        try{
            stat = kon.createStatement();
            sql = "SELECT * FROM tbl_barang ORDER BY id_barang DESC";
            rs = stat.executeQuery(sql);
            while(rs.next()){
                daftartabel.addRow(new Object[]{
                    rs.getString("kode_barang"),
                    rs.getString("nama_barang"),
                    rs.getString("expired_date"),
                    rs.getString("jumlah_barang"),
                    rs.getString("satuan"),
                    rs.getString("harga_satuan")
                });
                
            }
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        kd_barang = new javax.swing.JTextField();
        jml_barang = new javax.swing.JTextField();
        tanggal = new com.toedter.calendar.JDateChooser();
        nm_barang = new javax.swing.JTextField();
        hapus = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JTable();
        satuanText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/foodxyz/img/icons8-warehouse-96.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Gudang");

        logout.setBackground(new java.awt.Color(0, 153, 255));
        logout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("KELOLA");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("BARANG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(logout)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 180, 530);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Kelola Barang");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(320, 16, 160, 40);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel4.setText("Harga Per Satuan");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(440, 190, 120, 20);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel5.setText("Tabel Stok Barang");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(210, 300, 180, 20);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel6.setText("Kode Barang");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(210, 70, 70, 20);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel7.setText("Nama Barang");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(210, 130, 100, 20);

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel8.setText("Jumlah Barang");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(440, 70, 80, 20);

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel9.setText("Satuan");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(440, 130, 70, 20);
        getContentPane().add(harga);
        harga.setBounds(440, 210, 160, 30);
        getContentPane().add(kd_barang);
        kd_barang.setBounds(210, 90, 160, 30);

        jml_barang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jml_barangFocusLost(evt);
            }
        });
        jml_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jml_barangActionPerformed(evt);
            }
        });
        getContentPane().add(jml_barang);
        jml_barang.setBounds(440, 90, 160, 30);
        getContentPane().add(tanggal);
        tanggal.setBounds(210, 212, 160, 30);
        getContentPane().add(nm_barang);
        nm_barang.setBounds(210, 150, 160, 30);

        hapus.setBackground(new java.awt.Color(0, 153, 255));
        hapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus);
        hapus.setBounds(410, 260, 80, 23);

        tambah.setBackground(new java.awt.Color(0, 153, 255));
        tambah.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah);
        tambah.setBounds(210, 260, 80, 23);

        edit.setBackground(new java.awt.Color(0, 153, 255));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit);
        edit.setBounds(310, 260, 80, 23);

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel12.setText("Expired Data");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(210, 190, 110, 20);

        list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(190, 320, 490, 100);
        getContentPane().add(satuanText);
        satuanText.setBounds(440, 150, 160, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if (!isFormValid()) {
        return;  // Jika form tidak valid, tidak melanjutkan aksi.
        }
        // Mengonversi java.util.Date ke java.sql.Date
        java.util.Date utilDate = tanggal.getDate(); // Dapatkan nilai java.util.Date dari komponen JDateChooser
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime()); // Konversi ke java.sql.Date
        try{
            FoodXYZ list = new FoodXYZ();
            list.konfig();
            kon = list.getConnection();
            java.sql.PreparedStatement stat = kon.prepareStatement("UPDATE tbl_barang SET  nama_barang=?, expired_date=?, jumlah_barang=?, satuan=?, harga_satuan=? WHERE kode_barang=?");
            stat.setString(1,nm_barang.getText());
            stat.setDate(2, sqlDate);
            stat.setString(3, jml_barang.getText());
            stat.setString(4, satuanText.getText());
            stat.setString(5, harga.getText());
            stat.setString(6, kd_barang.getText());
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Diubah", "Chat", JOptionPane.INFORMATION_MESSAGE);
            barangList();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_editActionPerformed
    
    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        if (!isFormValid()) {
        return;  // Jika form tidak valid, tidak melanjutkan aksi.
        }
         try{
            FoodXYZ user = new FoodXYZ();
            user.konfig();
            kon = user.getConnection();
            // Periksa apakah kode_barang sudah ada dalam tabel
            String kodeBarang = kd_barang.getText();
            if (isKodeBarangExist(kodeBarang)) {
                JOptionPane.showMessageDialog(null, "Kode Barang sudah ada. Data tidak dapat ditambahkan.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Jangan lanjutkan jika kode_barang sudah ada
            }
            sql = "INSERT INTO tbl_barang(kode_barang, nama_barang, expired_date, jumlah_barang, satuan, harga_satuan) VALUES(?,?,?,?,?,?)";
            java.sql.PreparedStatement stat = kon.prepareStatement(sql);
            stat.setString(1,  kd_barang.getText());
            stat.setString(2,nm_barang.getText());
            stat.setString(3, tanggal());
            stat.setString(4, jml_barang.getText());
//            stat.setString(5, (String)satuan.getSelectedItem());
            stat.setString(5, satuanText.getText());
            stat.setString(6, harga.getText());
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Masuk", "Chat", JOptionPane.INFORMATION_MESSAGE);
            barangList();
        }catch(Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tambahActionPerformed

    // Fungsi untuk memeriksa apakah kode_barang sudah ada dalam tabel
    private boolean isKodeBarangExist(String kodeBarang) throws Exception {
        String query = "SELECT COUNT(*) FROM tbl_barang WHERE kode_barang = ?";
        java.sql.PreparedStatement stat = kon.prepareStatement(query);
        stat.setString(1, kodeBarang);
        ResultSet result = stat.executeQuery();
        if (result.next()) {
            int count = result.getInt(1);
            return count > 0;
        }
        return false;
    }
    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
         int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (confirm == 0) {
        try {
            FoodXYZ list = new FoodXYZ();
            list.konfig();
            kon = list.getConnection();
            java.sql.PreparedStatement stat = kon.prepareStatement("DELETE FROM tbl_barang WHERE kode_barang=?");
            stat.setString(1, kd_barang.getText()); // Menggunakan kode barang untuk menghapus
            int rowsDeleted = stat.executeUpdate();

            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);
                barangList();
                kd_barang.setText("");
                nm_barang.setText("");
                tanggal.setDate(null); // Menghapus tanggal
                jml_barang.setText("");
                satuanText.setText(""); 
                harga.setText("");
                kd_barang.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan", "Pesan", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data gagal dihapus: " + e.getMessage(), "Pesan", JOptionPane.ERROR_MESSAGE);
        }
    }    
    }//GEN-LAST:event_hapusActionPerformed

    private String selectedId;
    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = list.getSelectedRow();
    
        if (selectedRowIndex >= 0) {
            String kdBarang = daftartabel.getValueAt(selectedRowIndex, 0).toString();
            String nmBarang = daftartabel.getValueAt(selectedRowIndex, 1).toString();
            String expired = daftartabel.getValueAt(selectedRowIndex, 2).toString();
            String jumlahBarang = daftartabel.getValueAt(selectedRowIndex, 3).toString();
            String satuan = daftartabel.getValueAt(selectedRowIndex, 4).toString();
            String hargaSatuan = daftartabel.getValueAt(selectedRowIndex, 5).toString();

            kd_barang.setText(kdBarang);
            nm_barang.setText(nmBarang);

            // Set the date from the table to the JDateChooser
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                LocalDate tanggal2 = LocalDate.parse(expired,formatter);
                tanggal.setDate(java.sql.Date.valueOf(tanggal2));
            } catch (Exception e) {
                // Handle date parsing error
            }
            satuanText.setText(satuan);
            jml_barang.setText(jumlahBarang);
            harga.setText(hargaSatuan);

    }//GEN-LAST:event_listMouseClicked
  }
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?", "Konfirmasi Logout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
         // Ambil waktu saat ini
        java.util.Date utilDate = new java.util.Date();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(utilDate.getTime());
        java.sql.Date currentDate = new java.sql.Date(new java.util.Date().getTime());

        // Ambil tipe user (contoh: "Admin", "Kasir", dst.) dari sesi login sebelumnya
        String tipeUser = globalaccess.currentUserType;  // Anda harus mengisi kode untuk mengambil tipe user dari sesi login

        // Ambil id_user yang telah login sebelumnya
        int idUser = globalaccess.currentUserId;  // Anda harus mengisi kode untuk mengambil id_user dari sesi login
        
        String username = globalaccess.currentUsername;

        // Simpan informasi log ke dalam tabel tbl_log
        try {
            FoodXYZ DB = new FoodXYZ();
            DB.konfig();
            Connection kon = DB.con;
            Statement stat = DB.stm;

            String query = "INSERT INTO tbl_log (waktu, tanggal, aktivitas, tipe_user, username, id_user) "
                         + "VALUES (?, ?, ?, ?, ?, ?)";

            java.sql.PreparedStatement preparedStatement = kon.prepareStatement(query);
            preparedStatement.setTimestamp(1, timestamp);
            preparedStatement.setDate(2, currentDate);
            preparedStatement.setString(3, "user telah logout");  // Aktivitas logout
            preparedStatement.setString(4, tipeUser);
            preparedStatement.setString(5, username);
            preparedStatement.setInt(6, idUser);

            preparedStatement.executeUpdate();

            // Tampilkan pesan berhasil
            JOptionPane.showMessageDialog(null, "Logout berhasil. Terima kasih!");
            this.dispose();
            new loginForm().setVisible(true);
        } catch (Exception e) {
            // Tampilkan pesan error jika terjadi masalah
            JOptionPane.showMessageDialog(null, "Error saat melakukan logout: " + e.getMessage());
        }
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void jml_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jml_barangActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jml_barangActionPerformed

    private boolean isJumlahBarangValid = true;
    private void jml_barangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jml_barangFocusLost
        // TODO add your handling code here:
        jml_barang.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jml_barangFocusLost(evt);
        }
        });
         try {
            Integer.parseInt(jml_barang.getText());
            isJumlahBarangValid = true;
        } catch (NumberFormatException e) {
            isJumlahBarangValid = false;
            JOptionPane.showMessageDialog(this, "Jumlah Barang harus merupakan angka (integer).", "Error", JOptionPane.ERROR_MESSAGE);
            jml_barang.setText(""); // Mengosongkan text field jika input tidak valid
        }
    }//GEN-LAST:event_jml_barangFocusLost
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gudangKelolaBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gudangKelolaBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gudangKelolaBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gudangKelolaBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gudangKelolaBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jml_barang;
    private javax.swing.JTextField kd_barang;
    private javax.swing.JTable list;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nm_barang;
    private javax.swing.JTextField satuanText;
    private javax.swing.JButton tambah;
    private com.toedter.calendar.JDateChooser tanggal;
    // End of variables declaration//GEN-END:variables
}
