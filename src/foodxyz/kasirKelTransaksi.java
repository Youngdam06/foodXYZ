/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package foodxyz;

import java.io.FileOutputStream;
import java.awt.event.ActionEvent;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/**
 *
 * @author Adam
 */
public class kasirKelTransaksi extends javax.swing.JFrame {

    Statement stat;
    ResultSet rs;
    String sql;
    Connection kon;
    public kasirKelTransaksi() {
        initComponents();
        this.pilihKode();
        FoodXYZ DB = new FoodXYZ();
        DB.konfig();
        kon = DB.con;
        stat = DB.stm;
       this.tampilkanJamWaktu();
       this.tampilKasir();
    }
// membuat fungsi untuk combo box pilih barang
    public void pilihKode() {
         try{
            FoodXYZ list = new FoodXYZ();
            list.konfig(); 
            Connection kon = list.getConnection(); 
            stat = kon.createStatement();
            sql = "SELECT * FROM tbl_barang";
            rs = stat.executeQuery(sql);
            while(rs.next()){
                String id_brg = rs.getString("id_barang");
                String nama_brg = rs.getString("nama_barang");
                String harga = rs.getString("harga_satuan");
                kd_barang.addItem(id_brg);
                if(nama_brg.equals(kd_barang.getSelectedItem())){
                    harga_satuan.setText(harga);
                    nama_barang.setText(nama_brg);
                }
            }
//            fungsi untuk menyinkron nama barang yang dipilih dengan nama barang
            kd_barang.addActionListener((ActionEvent e) -> {
                String selectedId = (String) kd_barang.getSelectedItem();
                String query = "SELECT * FROM tbl_barang WHERE id_barang = '" + selectedId + "'";
                try {
                    java.sql.Statement stmt2 = kon.createStatement();
                    java.sql.ResultSet res2 = stmt2.executeQuery(query);
                    if (res2.next()) {
                        String harga = res2.getString("harga_satuan");
                        String nama = res2.getString("nama_barang");
                        harga_satuan.setText(harga);
                        nama_barang.setText(nama);
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            });
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ttl_harga = new javax.swing.JTextField();
        kuantitas = new javax.swing.JTextField();
        harga_satuan = new javax.swing.JTextField();
        kd_barang = new javax.swing.JComboBox<>();
        reset = new javax.swing.JButton();
        bayar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_menu = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jumlah_bayar = new javax.swing.JTextField();
        simpan = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        print = new javax.swing.JButton();
        hitung = new javax.swing.JButton();
        kembalian = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        list_total = new javax.swing.JTextField();
        nm_kasir = new javax.swing.JTextField();
        jam_waktu = new javax.swing.JTextField();
        nama_barang = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        reset1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/foodxyz/img/icons8-cashier-64.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Kasir");

        logout.setBackground(new java.awt.Color(0, 153, 255));
        logout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("KELOLA");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("TRANSAKSI");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGap(15, 15, 15))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(logout)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 180, 570);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Form Transaksi");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 20, 160, 30);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel6.setText("Pilih Barang");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(210, 70, 70, 20);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel7.setText("Total Harga : ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(210, 410, 100, 20);

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel8.setText("Quantitas");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(440, 70, 54, 20);

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel9.setText("Total Harga");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(440, 130, 70, 20);

        ttl_harga.setEditable(false);
        ttl_harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ttl_hargaActionPerformed(evt);
            }
        });
        getContentPane().add(ttl_harga);
        ttl_harga.setBounds(440, 150, 160, 30);
        getContentPane().add(kuantitas);
        kuantitas.setBounds(440, 90, 90, 30);

        harga_satuan.setEditable(false);
        getContentPane().add(harga_satuan);
        harga_satuan.setBounds(210, 210, 160, 30);

        kd_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kd_barangActionPerformed(evt);
            }
        });
        getContentPane().add(kd_barang);
        kd_barang.setBounds(210, 92, 160, 30);

        reset.setBackground(new java.awt.Color(0, 153, 255));
        reset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(530, 200, 70, 23);

        bayar.setBackground(new java.awt.Color(0, 153, 255));
        bayar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bayar.setText("Bayar");
        bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });
        getContentPane().add(bayar);
        bayar.setBounds(210, 490, 140, 23);

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel12.setText("Nama Barang");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(210, 130, 100, 20);

        list_menu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Barang", "Nama Barang", "Harga Satuan", "Kuantitas", "Total Harga"
            }
        ));
        jScrollPane1.setViewportView(list_menu);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(210, 300, 420, 100);

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel13.setText("Kembalian");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(210, 520, 100, 20);
        getContentPane().add(jumlah_bayar);
        jumlah_bayar.setBounds(210, 450, 140, 30);

        simpan.setBackground(new java.awt.Color(0, 153, 255));
        simpan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });
        getContentPane().add(simpan);
        simpan.setBounds(530, 490, 80, 23);

        tambah.setBackground(new java.awt.Color(0, 153, 255));
        tambah.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah);
        tambah.setBounds(440, 200, 80, 23);

        print.setBackground(new java.awt.Color(0, 153, 255));
        print.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print);
        print.setBounds(440, 490, 80, 23);

        hitung.setBackground(new java.awt.Color(0, 153, 255));
        hitung.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hitung.setText("hitung");
        hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitungActionPerformed(evt);
            }
        });
        getContentPane().add(hitung);
        hitung.setBounds(540, 90, 72, 30);

        kembalian.setEditable(false);
        kembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembalianActionPerformed(evt);
            }
        });
        getContentPane().add(kembalian);
        kembalian.setBounds(280, 520, 71, 30);

        jLabel14.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel14.setText("Keranjang");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(210, 270, 100, 20);

        list_total.setEditable(false);
        list_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_totalActionPerformed(evt);
            }
        });
        getContentPane().add(list_total);
        list_total.setBounds(290, 410, 71, 30);

        nm_kasir.setEditable(false);
        nm_kasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nm_kasirActionPerformed(evt);
            }
        });
        getContentPane().add(nm_kasir);
        nm_kasir.setBounds(450, 20, 90, 30);

        jam_waktu.setEditable(false);
        jam_waktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jam_waktuActionPerformed(evt);
            }
        });
        getContentPane().add(jam_waktu);
        jam_waktu.setBounds(550, 20, 80, 30);

        nama_barang.setEditable(false);
        getContentPane().add(nama_barang);
        nama_barang.setBounds(210, 150, 160, 30);

        jLabel15.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel15.setText("Harga Satuan");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(210, 190, 100, 20);

        reset1.setBackground(new java.awt.Color(0, 153, 255));
        reset1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reset1.setText("Reset");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });
        getContentPane().add(reset1);
        reset1.setBounds(540, 410, 70, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents
// memeriksa jika semua field sudah diisi
    private boolean isFormValid() {
    if (kd_barang.getSelectedItem().toString().isEmpty() || 
        kuantitas.getText().isEmpty() || 
        ttl_harga.getText().isEmpty() || 
        jumlah_bayar.getText().isEmpty()
        ) {
        JOptionPane.showMessageDialog(null, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    return true;
}
    private boolean isFormValid1() {
    if (kd_barang.getSelectedItem().toString().isEmpty() || 
        kuantitas.getText().isEmpty()
        ) {
        JOptionPane.showMessageDialog(null, "pilih barang dulu!", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
     String kuantitasText = kuantitas.getText();
    try {
        int qty = Integer.parseInt(kuantitasText);
        if (qty <= 0) {
            JOptionPane.showMessageDialog(null, "Kuantitas harus bilangan bulat positif!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Kuantitas harus berupa bilangan bulat!", "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    return true;
}
    private void bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarActionPerformed
        // TODO add your handling code here:
        if (!isFormValid()) {
            return;  // Jika form tidak valid, tidak melanjutkan aksi.
        }
        String jumlahBayarText = jumlah_bayar.getText();
        try {
            int jumlahBayar = Integer.parseInt(jumlahBayarText);
            if (jumlahBayar <= 0) {
                JOptionPane.showMessageDialog(null, "Jumlah bayar harus bilangan bulat positif!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = Integer.parseInt(list_total.getText());

            // Menghitung kembalian
            int hasil_kembalian = jumlahBayar - totalHarga;

            // Menampilkan kembalian pada text field kembalian
            kembalian.setText(String.valueOf(hasil_kembalian));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Jumlah bayar harus berupa bilangan bulat!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bayarActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        // TODO add your handling code here:
//        memeriksa apakah data di tabel list kosong
        DefaultTableModel model1 = (DefaultTableModel) list_menu.getModel();
        int rowCount = model1.getRowCount();
        if (model1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Tabel masih kosong. Tambahkan item terlebih dahulu sebelum menyimpan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;  // Tidak melanjutkan aksi jika tabel kosong
        }

        try {
            FoodXYZ DB = new FoodXYZ();            
            DB.konfig();
            Connection kon = DB.con;
            Statement stat = DB.stm;

            for (int i = 0; i < rowCount; i++) {
                String idBarang = model1.getValueAt(i, 0).toString();
                int totalHarga = Integer.parseInt(list_total.getText());
                int userId = globalaccess.currentUserId;
                String nama = globalaccess.currentName;

                // Mengambil tanggal transaksi saat ini
                java.util.Date utilDate = new java.util.Date();
                java.sql.Date tanggalTransaksi = new java.sql.Date(utilDate.getTime());

               String query = "INSERT INTO tbl_transaksi (total_bayar, tgl_transaksi, id_user, nama_kasir, id_barang) VALUES (?, ?, ?, ?, ?)";
                java.sql.PreparedStatement preparedStatement = kon.prepareStatement(query);

                preparedStatement.setInt(1, totalHarga);
                preparedStatement.setDate(2, tanggalTransaksi);
                preparedStatement.setInt(3, userId);
                preparedStatement.setString(4, nama);
                preparedStatement.setString(5, idBarang);
                preparedStatement.executeUpdate();
            }

            JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan ke database!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_simpanActionPerformed
// membuat fungsgi hitung total harga
    private int hitungTotalHarga() {
    DefaultTableModel model = (DefaultTableModel) list_menu.getModel();
    int rowCount = model.getRowCount();
    int totalHarga = 0;

    for (int i = 0; i < rowCount; i++) {
        totalHarga += Integer.parseInt(model.getValueAt(i, 4).toString());
    }   

    return totalHarga;
}
//    fungsi untuk mengembalikan nilai hitung totalharga
    private void updateTotal() {
    int totalHarga = hitungTotalHarga();
    list_total.setText(Integer.toString(totalHarga));
}
    
    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        if (!isFormValid1()) {
        return;  // Jika form tidak valid, tidak melanjutkan aksi.
        }
        String idBarang = kd_barang.getSelectedItem().toString();
        int hargaSatuan = Integer.parseInt(harga_satuan.getText());
        int qty = Integer.parseInt(kuantitas.getText());
        int totalHarga = Integer.parseInt(ttl_harga.getText());
        String namaBarang = nama_barang.getText();
        

        // Menambahkan data ke dalam tabel
        Object[] row = {idBarang, namaBarang, hargaSatuan, qty, totalHarga};
        DefaultTableModel model = (DefaultTableModel) list_menu.getModel();
        model.addRow(row);
        updateTotal();
    }//GEN-LAST:event_tambahActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
//        memeriksa apakah data di tabel list kosong
        DefaultTableModel model1 = (DefaultTableModel) list_menu.getModel();
        int rowCount = model1.getRowCount();
        if (model1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Tabel masih kosong. Tambahkan item terlebih dahulu sebelum menyimpan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;  // Tidak melanjutkan aksi jika tabel kosong
        }
        try {
            // TODO add your handling code here:
            Boolean ppt = list_menu.print();
            if (ppt){
                JOptionPane.showMessageDialog(null, "Selesai");
            }
            else {
                JOptionPane.showMessageDialog(null, "print");
            }
        } catch (PrinterException ex) {
            Logger.getLogger(kasirKelTransaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }//GEN-LAST:event_printActionPerformed

    private void ttl_hargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ttl_hargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ttl_hargaActionPerformed

    private void hitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitungActionPerformed
        // TODO add your handling code here:
        int hargaSatuan = Integer.parseInt(harga_satuan.getText());
        int qty = Integer.parseInt(kuantitas.getText());
        int totalHarga = hargaSatuan * qty;
        ttl_harga.setText(String.valueOf(totalHarga));
        
        // Lalu, kamu bisa tambahkan logika untuk menambahkan data ke keranjang atau tabel lainnya di sini
        // Misalnya: menambahkan nama menu, harga satuan, dan total harga ke dalam tabel keranjang
        
        // Setelah itu, kamu bisa clear nilai di text field kuantitas
    }//GEN-LAST:event_hitungActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        harga_satuan.setText("");
        kuantitas.setText("");
        ttl_harga.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void kembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembalianActionPerformed
        // TODO add your handling code here:
         // Mengambil nilai dari text field total dan jumlah bayar
        
    }//GEN-LAST:event_kembalianActionPerformed

    private void list_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list_totalActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin logout?", "Konfirmasi Logout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
         // Ambil waktu saat ini
        java.util.Date utilDate = new java.util.Date();
        java.sql.Timestamp timestamp = new java.sql.Timestamp(utilDate.getTime());
        java.sql.Date currentDate = new java.sql.Date(new java.util.Date().getTime());

        // Ambil tipe user (contoh: "Admin", "Kasir", dst.) dari sesi login sebelumnya
        String tipeUser = globalaccess.currentUserType;  // Anda harus mengisi kode untuk mengambil tipe user dari sesi login

        // Ambil id_user yang telah login sebelumnya
        int idUser = globalaccess.currentUserId;  // Anda harus mengisi kode untuk mengambil id_user dari sesi login
        
        String username = globalaccess.currentUsername;

        // Simpan informasi log ke dalam tabel tbl_log
        try {
            FoodXYZ DB = new FoodXYZ();
            DB.konfig();
            Connection kon = DB.con;
            Statement stat = DB.stm;

            String query = "INSERT INTO tbl_log (waktu, tanggal, aktivitas, tipe_user, username, id_user) "
                         + "VALUES (?, ?, ?, ?, ?, ?)";

            java.sql.PreparedStatement preparedStatement = kon.prepareStatement(query);
            preparedStatement.setTimestamp(1, timestamp);
            preparedStatement.setDate(2, currentDate);
            preparedStatement.setString(3, "user telah logout");  // Aktivitas logout
            preparedStatement.setString(4, tipeUser);
            preparedStatement.setString(5, username);
            preparedStatement.setInt(6, idUser);

            preparedStatement.executeUpdate();

            // Tampilkan pesan berhasil
            JOptionPane.showMessageDialog(null, "Logout berhasil. Terima kasih!");
            this.dispose();
            new loginForm().setVisible(true);
        } catch (Exception e) {
            // Tampilkan pesan error jika terjadi masalah
            JOptionPane.showMessageDialog(null, "Error saat melakukan logout: " + e.getMessage());
        }
        }
    }//GEN-LAST:event_logoutActionPerformed
// menampilkan nama kasir
    private void tampilKasir() {
        String nama = sesiKasir.currentName;
        nm_kasir.setText(nama);
    }
//    membuat fungsi untuk menampilkan waktu
    private void tampilkanJamWaktu() {
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
//            overriding aksi 
            @Override
            public void run() {
                Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss"); // Format waktu yang diinginkan
                String jamWaktu = sdf.format(date);
                jam_waktu.setText(jamWaktu); // Set text field dengan waktu saat ini
            }
        };
        // Jadwalkan tugas untuk berjalan setiap detik (1000 milidetik)
        timer.scheduleAtFixedRate(task, 0, 1000);
    }
    private void kd_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kd_barangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kd_barangActionPerformed

    private void nm_kasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nm_kasirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nm_kasirActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) list_menu.getModel();
        model.setRowCount(0); // Mengosongkan semua baris dalam tabel
        list_total.setText("");
    }//GEN-LAST:event_reset1ActionPerformed

    private void jam_waktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jam_waktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jam_waktuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kasirKelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kasirKelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kasirKelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kasirKelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kasirKelTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bayar;
    private javax.swing.JTextField harga_satuan;
    private javax.swing.JButton hitung;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jam_waktu;
    private javax.swing.JTextField jumlah_bayar;
    private javax.swing.JComboBox<String> kd_barang;
    private javax.swing.JTextField kembalian;
    private javax.swing.JTextField kuantitas;
    private javax.swing.JTable list_menu;
    private javax.swing.JTextField list_total;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nama_barang;
    private javax.swing.JTextField nm_kasir;
    private javax.swing.JButton print;
    private javax.swing.JButton reset;
    private javax.swing.JButton reset1;
    private javax.swing.JButton simpan;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField ttl_harga;
    // End of variables declaration//GEN-END:variables
}
